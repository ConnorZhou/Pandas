#设定系统环境
import pandas as pd
pd.options.display.max_rows=10#设定自由列表输出最多为10行
pd.__version__#显示当前Pandas版本号

4 索引
4.1 建立索引
4.1.1 新建数据框时建立索引

#所有的数据框默认都已经拥有流水号格式的索引，因此这里的“建立”索引指的是自定义索引
df1=pd.DataFrame({'var1':1.0,
                  'var2':[1,2,3,4], 
                  'var3':["test","train","text","train"],
                  'var4':'cons'}, 
                 index=['0','1','2','5'])
df1

df1=pd.DataFrame({'var1':1.0,
                  'var2':[1,2,3,4], 
                  'var3':["test","train","text","train"],
                  'var4':'cons'}, 
)
df1

4.1.2 读入数据时建立索引

df2=pd.read_csv("D:\Python\pandas\PythonData\\univ.csv",encoding="gbk",index_col="学校名称")
df2

#生成复合索引
df2=pd.read_csv("D:\Python\pandas\PythonData\\univ.csv",encoding="gbk",index_col=["类型","学校名称"])
df2

4.1.3 指定某列为索引列

#导入列表
df2=pd.read_csv("D:\Python\pandas\PythonData\\univ.csv",encoding="gbk")
df2

df_new=df2.set_index('名次')#原索引被直接替换
df_new

df_new=df2.set_index(['名次','学校名称'],drop=False)#原索引被直接替换
df_new

df_new=df2.set_index('名次',
                    append=True,#是否在原索引基础上添加索引，默认是直接替换原索引
                    drop=False#建立索引之后是否删除该列
                    )
df_new

4.2 将索引还原回变量列

df_new2=df2.copy()#真正生成副本，而不是指定另一个别名
df_new2.set_index('所在省份',
                  inplace=True,#是否直接修改原数据框
                  append=True#是否在原索引基础上添加索引，默认是直接替换原索引
                 )
df_new2

df_new2.reset_index(inplace=True)#将索引全部还原为变量
df_new2

df_new2=df2.copy()#真正生成副本，而不是指定另一个别名
df_new2.set_index(['类型','所在省份'],
                  inplace=True,#是否直接修改原数据框
                   )
df_new2

df_new2.reset_index(level=['类型'])#筛选其中一个进行还原

df_new2

df_new2=df2.copy()#真正生成副本，而不是指定另一个别名
df_new2.set_index(['类型','所在省份','名次'],
                  inplace=True,#是否直接修改原数据框
                   )
df_new2

df_new2.reset_index(level=['名次','所在省份'])#保留一个作为索引

4.3 引用和修改索引
4.3.1 引用索引

df1.index

df2.index

df_new2.index

4.3.2 修改索引
4.3.2.1 修改索引名

df2.index.names#为什么是复数形式的names？原因：索引可能有多个

df2.index.names=['idx']
df2.index.names

df_new2.index.names=[None,None,None]#None代表无名称
df_new2.index.names

df_new2.index.names=[None,None,None]#None代表无名称
df_new2

4.3.2.2 修改索引值

df1.index[1]#此处无法直接赋值

df1.index=['a','b','c','new']
df1

4.3.3 强行更新索引

df2.set_index('名次')
#把df2建立一个索引：名次

df2.reindex()
#没有新索引，把老索引去掉，原来的索引还原为变量列

df2.reindex([1,2,99,101])
#索引标签为：1，2，99，101

df2.reindex([1,2,99,101],method='ffill')
#用前面有效数值填充

df2.reindex([1,2,99,101],fill_value="不知道")
#简单填充

df2.reindex([1,2,104,98])
